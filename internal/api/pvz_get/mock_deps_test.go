// Code generated by MockGen. DO NOT EDIT.
// Source: deps.go
//
// Generated by this command:
//
//	mockgen -source deps.go -package pvz_get -typed -destination mock_deps_test.go
//

// Package pvz_get is a generated GoMock package.
package pvz_get

import (
	context "context"
	reflect "reflect"
	time "time"

	model "github.com/inna-maikut/avito-pvz/internal/model"
	gomock "go.uber.org/mock/gomock"
)

// MockpvzListGetting is a mock of pvzListGetting interface.
type MockpvzListGetting struct {
	ctrl     *gomock.Controller
	recorder *MockpvzListGettingMockRecorder
	isgomock struct{}
}

// MockpvzListGettingMockRecorder is the mock recorder for MockpvzListGetting.
type MockpvzListGettingMockRecorder struct {
	mock *MockpvzListGetting
}

// NewMockpvzListGetting creates a new mock instance.
func NewMockpvzListGetting(ctrl *gomock.Controller) *MockpvzListGetting {
	mock := &MockpvzListGetting{ctrl: ctrl}
	mock.recorder = &MockpvzListGettingMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockpvzListGetting) EXPECT() *MockpvzListGettingMockRecorder {
	return m.recorder
}

// GetPVZList mocks base method.
func (m *MockpvzListGetting) GetPVZList(ctx context.Context, receptedAtFrom, receptedAtTo *time.Time, page, limit int64) (model.PVZList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPVZList", ctx, receptedAtFrom, receptedAtTo, page, limit)
	ret0, _ := ret[0].(model.PVZList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPVZList indicates an expected call of GetPVZList.
func (mr *MockpvzListGettingMockRecorder) GetPVZList(ctx, receptedAtFrom, receptedAtTo, page, limit any) *MockpvzListGettingGetPVZListCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPVZList", reflect.TypeOf((*MockpvzListGetting)(nil).GetPVZList), ctx, receptedAtFrom, receptedAtTo, page, limit)
	return &MockpvzListGettingGetPVZListCall{Call: call}
}

// MockpvzListGettingGetPVZListCall wrap *gomock.Call
type MockpvzListGettingGetPVZListCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockpvzListGettingGetPVZListCall) Return(arg0 model.PVZList, arg1 error) *MockpvzListGettingGetPVZListCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockpvzListGettingGetPVZListCall) Do(f func(context.Context, *time.Time, *time.Time, int64, int64) (model.PVZList, error)) *MockpvzListGettingGetPVZListCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockpvzListGettingGetPVZListCall) DoAndReturn(f func(context.Context, *time.Time, *time.Time, int64, int64) (model.PVZList, error)) *MockpvzListGettingGetPVZListCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// Code generated by MockGen. DO NOT EDIT.
// Source: deps.go
//
// Generated by this command:
//
//	mockgen -source deps.go -package reception_create -typed -destination mock_deps_test.go
//

// Package reception_create is a generated GoMock package.
package reception_create

import (
	context "context"
	reflect "reflect"

	model "github.com/inna-maikut/avito-pvz/internal/model"
	gomock "go.uber.org/mock/gomock"
)

// MockreceptionCreating is a mock of receptionCreating interface.
type MockreceptionCreating struct {
	ctrl     *gomock.Controller
	recorder *MockreceptionCreatingMockRecorder
	isgomock struct{}
}

// MockreceptionCreatingMockRecorder is the mock recorder for MockreceptionCreating.
type MockreceptionCreatingMockRecorder struct {
	mock *MockreceptionCreating
}

// NewMockreceptionCreating creates a new mock instance.
func NewMockreceptionCreating(ctrl *gomock.Controller) *MockreceptionCreating {
	mock := &MockreceptionCreating{ctrl: ctrl}
	mock.recorder = &MockreceptionCreatingMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockreceptionCreating) EXPECT() *MockreceptionCreatingMockRecorder {
	return m.recorder
}

// CreateReception mocks base method.
func (m *MockreceptionCreating) CreateReception(ctx context.Context, pvzID model.PVZID) (model.Reception, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateReception", ctx, pvzID)
	ret0, _ := ret[0].(model.Reception)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateReception indicates an expected call of CreateReception.
func (mr *MockreceptionCreatingMockRecorder) CreateReception(ctx, pvzID any) *MockreceptionCreatingCreateReceptionCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateReception", reflect.TypeOf((*MockreceptionCreating)(nil).CreateReception), ctx, pvzID)
	return &MockreceptionCreatingCreateReceptionCall{Call: call}
}

// MockreceptionCreatingCreateReceptionCall wrap *gomock.Call
type MockreceptionCreatingCreateReceptionCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockreceptionCreatingCreateReceptionCall) Return(arg0 model.Reception, arg1 error) *MockreceptionCreatingCreateReceptionCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockreceptionCreatingCreateReceptionCall) Do(f func(context.Context, model.PVZID) (model.Reception, error)) *MockreceptionCreatingCreateReceptionCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockreceptionCreatingCreateReceptionCall) DoAndReturn(f func(context.Context, model.PVZID) (model.Reception, error)) *MockreceptionCreatingCreateReceptionCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
